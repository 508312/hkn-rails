<% stylesheet_link_tag "tutor.css" %>
<h1>Edit Tutoring Schedule</h1>
<%= form_tag do %>
<input type="checkbox" id="only_available" name="only_available" checked="checked" /><label id="only_available">Restrict to officers who are available at each time.</label>
<p>'P' = strongly prefer this office, 'p' = okay with this office, absence of such = do not prefer this office</p>
<p>'A' = prefer adjacent slots, 'a' = do not prefer adjacent slots, absence of such = no preference of adjacency</p>
<p> Only tutoring officers have sufficient privileges to change the schedule.</p>
<p>To edit any slots, you must do TWO submits. First remove all tutors to be switched and submit.</p>
<p>Then add them back in the right places, and submit again. If you don't do that exactly, the schedule may not end up in the right state.</p>
<div class="overflow">
<table id="edit_schedule">
  <tr>
    <th>Hours</th>
    <% @days.each do |day| %>
    <th class="slot-table-header"><%= day %></th>
    <% end %>
  </tr>
<% @hours.each do |hour| %>
  <% [:cory, :soda].each do |room_name| %>
    <% room = Slot::ROOMS[room_name] %>
    <tr>
      <% if room_name == :cory %>
        <td rowspan="2"><%= format_hour_slot hour %></td>
      <% end %>
      <% @wdays.each do |wday| %>
      <td  class="slot <%= room_name.to_s %>">
        <p><%= room_name.to_s.capitalize%></p>
        <%= select_tag "#{room}_#{wday}_#{hour}", grouped_options_for_select(@slot_options[room][wday][hour][:opts], @slot_options[room][wday][hour][:defaults]), :multiple => true %>
      </td>
      <% end%>
    </tr>
  <% end %>
<% end %>
</table>
</div>
<%= submit_tag "Save changes" %>
<%= submit_tag "Reset all" %>
<% end %><br/>

<p>Each of the following categories are simple counts, except for (Non)Adjacencies and Correct Office.</p>
<p>1 is added to the former if a tutor's slots match the adjacency preference, or if the tutor has no preference.</p>
<p>For the latter, a 'P' on a slot adds 2, while a 'p' adds 1.</p>
<p>Finally, Happiness is a linear combination of each factor, with the following weights:</p>
<p>Availabilities = 0</p>
<p>First Choices = 6</p>
<p>Second Choices = 0</p>
<p>Wrong Times = -10000</p>
<p>(Non)Adjacencies = 1 (officers only)</p>
<p>Correct Office = 2</p>

<% [@officer_stats, @cmember_stats].each do |stats| %>
<div class="overflow">
<table>
<tr>
<% if stats == @officer_stats %>
<td><h3>Officers</h3></td>
<% else %> <td><h3>Committee members</h3></td><% end %>
<td><h3>Availabilities</h3></td>
<td><h3>First Choices</h3></td>
<td><h3>Second Choices</h3></td>
<td><h3>Wrong Times</h3></td>
<% if stats == @officer_stats %>
<td><h3>(Non)Adjacencies</h3></td><% end %>
<td><h3>Correct Office</h3></td>
<td><h3>Total Happiness = <%= stats['happiness'] %></h3></td>
</tr>
<% Tutor.all.sort_by{|t| [-t.availabilities.count, t.person.fullname]}.each do |tutor| %>
<tr>
<% if stats.keys.include?(tutor) %>
<td><%= tutor.person.fullname %></td>
<% stats[tutor][0].each do |entry| %>
<td><%= entry %></td>
<% end %>
</tr><% end %><% end %>
</table>
</div>
<br/>
<% end %>
